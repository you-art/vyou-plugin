{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import {WebPlugin} from '@capacitor/core';\r\n\r\nimport type {\r\n  vyouPluginPlugin,\r\n  ConnectionStatus,\r\n  ConnectionType\r\n} from './definitions';\r\n\r\ndeclare global {\r\n  interface Navigator {\r\n    connection: any;\r\n    mozConnection: any;\r\n    webkitConnection: any;\r\n  }\r\n}\r\n\r\nfunction translatedConnection(): ConnectionType {\r\n  const connection =\r\n    window.navigator.connection ||\r\n    window.navigator.mozConnection ||\r\n    window.navigator.webkitConnection;\r\n  let result: ConnectionType = 'unknown';\r\n  const type = connection ? connection.type || connection.effectiveType : null;\r\n  if (type && typeof type === 'string') {\r\n    switch (type) {\r\n      // possible type values\r\n      case 'bluetooth':\r\n      case 'cellular':\r\n        result = 'cellular';\r\n        break;\r\n      case 'none':\r\n        result = 'none';\r\n        break;\r\n      case 'ethernet':\r\n      case 'wifi':\r\n      case 'wimax':\r\n        result = 'wifi';\r\n        break;\r\n      case 'other':\r\n      case 'unknown':\r\n        result = 'unknown';\r\n        break;\r\n      // possible effectiveType values\r\n      case 'slow-2g':\r\n      case '2g':\r\n      case '3g':\r\n        result = 'cellular';\r\n        break;\r\n      case '4g':\r\n        result = 'wifi';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport class vyouPluginWeb extends WebPlugin implements vyouPluginPlugin {\r\n\r\n  constructor() {\r\n    super();\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('online', this.handleOnline);\r\n      window.addEventListener('offline', this.handleOffline);\r\n    }\r\n  }\r\n\r\n  ping = async (options: {ipAddress: string, timeOut: number | undefined, retries: number | undefined}): Promise<{pings: number, pongs: number, avgRtt: number | undefined}> => {\r\n    options.timeOut = options.timeOut ?? 1000\r\n    options.retries = options.retries ?? 1\r\n    return {\r\n      pings: options.retries,\r\n      pongs: Math.floor(Math.random() * options.retries),\r\n      avgRtt: Math.random() * 100\r\n    }\r\n  }\r\n\r\n  getConnectionStatus = async (): Promise<ConnectionStatus> => {\r\n    if (!window.navigator) {\r\n      throw this.unavailable(\r\n        'Browser does not support the Network Information API',\r\n      );\r\n    }\r\n\r\n    const connected = window.navigator.onLine;\r\n    const connectionType = translatedConnection();\r\n\r\n    const status: ConnectionStatus = {\r\n      connected,\r\n      connectionType: connected ? connectionType : 'none',\r\n      ssid: undefined,\r\n      bssid: undefined\r\n    };\r\n\r\n    return status;\r\n  }\r\n\r\n  private handleOnline = () => {\r\n    const connectionType = translatedConnection();\r\n\r\n    const status: ConnectionStatus = {\r\n      connected: true,\r\n      connectionType: connectionType,\r\n      ssid: undefined,\r\n      bssid: undefined\r\n    };\r\n\r\n    this.notifyListeners('networkStatusChange', status);\r\n  };\r\n\r\n  private handleOffline = () => {\r\n    const status: ConnectionStatus = {\r\n      connected: false,\r\n      connectionType: 'none',\r\n      ssid: undefined,\r\n      bssid: undefined\r\n    };\r\n\r\n    this.notifyListeners('networkStatusChange', status);\r\n  };\r\n}\r\n"]}